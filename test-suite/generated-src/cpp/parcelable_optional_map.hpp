// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from parcelable.djinni

#ifndef DJINNI_GENERATED_PARCELABLE_OPTIONAL_MAP_HPP
#define DJINNI_GENERATED_PARCELABLE_OPTIONAL_MAP_HPP

#include "../../handwritten-src/cpp/optional.hpp"
#include <iostream>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <utility>

namespace testsuite {

struct ParcelableOptionalMap final {
    std::experimental::optional<std::unordered_map<std::string, std::unordered_set<std::string>>> optional_set;

    ParcelableOptionalMap(std::experimental::optional<std::unordered_map<std::string, std::unordered_set<std::string>>> optional_set_)
    : optional_set(std::move(optional_set_))
    {}

    ParcelableOptionalMap(const ParcelableOptionalMap& cpy) {
       this->optional_set = cpy.optional_set;
    }

    ParcelableOptionalMap() = default;


    ParcelableOptionalMap& operator=(const ParcelableOptionalMap& cpy) {
       this->optional_set = cpy.optional_set;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(optional_set);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(optional_set);
    }
};

}  // namespace testsuite
#endif //DJINNI_GENERATED_PARCELABLE_OPTIONAL_MAP_HPP
