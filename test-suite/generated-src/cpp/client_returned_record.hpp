// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from client_interface.djinni

#ifndef DJINNI_GENERATED_CLIENT_RETURNED_RECORD_HPP
#define DJINNI_GENERATED_CLIENT_RETURNED_RECORD_HPP

#include "../../handwritten-src/cpp/optional.hpp"
#include <cstdint>
#include <iostream>
#include <string>
#include <utility>

namespace testsuite {

/** Record returned by a client */
struct ClientReturnedRecord final {
    int64_t record_id;
    std::string content;
    std::experimental::optional<std::string> misc;

    ClientReturnedRecord(int64_t record_id_,
                         std::string content_,
                         std::experimental::optional<std::string> misc_)
    : record_id(std::move(record_id_))
    , content(std::move(content_))
    , misc(std::move(misc_))
    {}

    ClientReturnedRecord(const ClientReturnedRecord& cpy) {
       this->record_id = cpy.record_id;
       this->content = cpy.content;
       this->misc = cpy.misc;
    }

    ClientReturnedRecord() = default;


    ClientReturnedRecord& operator=(const ClientReturnedRecord& cpy) {
       this->record_id = cpy.record_id;
       this->content = cpy.content;
       this->misc = cpy.misc;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(record_id, content, misc);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(record_id, content, misc);
    }
};

}  // namespace testsuite
#endif //DJINNI_GENERATED_CLIENT_RETURNED_RECORD_HPP
