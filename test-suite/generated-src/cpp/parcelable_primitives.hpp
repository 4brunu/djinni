// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from parcelable.djinni

#ifndef DJINNI_GENERATED_PARCELABLE_PRIMITIVES_HPP
#define DJINNI_GENERATED_PARCELABLE_PRIMITIVES_HPP

#include "../../handwritten-src/cpp/optional.hpp"
#include <chrono>
#include <cstdint>
#include <iostream>
#include <string>
#include <utility>

namespace testsuite {

struct ParcelablePrimitives final {
    bool b;
    int8_t eight;
    int16_t sixteen;
    int32_t thirtytwo;
    int64_t sixtyfour;
    float fthirtytwo;
    double fsixtyfour;
    std::string s;
    std::chrono::system_clock::time_point d;
    std::experimental::optional<bool> o_b;
    std::experimental::optional<int8_t> o_eight;
    std::experimental::optional<int16_t> o_sixteen;
    std::experimental::optional<int32_t> o_thirtytwo;
    std::experimental::optional<int64_t> o_sixtyfour;
    std::experimental::optional<float> o_fthirtytwo;
    std::experimental::optional<double> o_fsixtyfour;
    std::experimental::optional<std::string> o_s;
    std::experimental::optional<std::chrono::system_clock::time_point> o_d;

    ParcelablePrimitives(bool b_,
                         int8_t eight_,
                         int16_t sixteen_,
                         int32_t thirtytwo_,
                         int64_t sixtyfour_,
                         float fthirtytwo_,
                         double fsixtyfour_,
                         std::string s_,
                         std::chrono::system_clock::time_point d_,
                         std::experimental::optional<bool> o_b_,
                         std::experimental::optional<int8_t> o_eight_,
                         std::experimental::optional<int16_t> o_sixteen_,
                         std::experimental::optional<int32_t> o_thirtytwo_,
                         std::experimental::optional<int64_t> o_sixtyfour_,
                         std::experimental::optional<float> o_fthirtytwo_,
                         std::experimental::optional<double> o_fsixtyfour_,
                         std::experimental::optional<std::string> o_s_,
                         std::experimental::optional<std::chrono::system_clock::time_point> o_d_)
    : b(std::move(b_))
    , eight(std::move(eight_))
    , sixteen(std::move(sixteen_))
    , thirtytwo(std::move(thirtytwo_))
    , sixtyfour(std::move(sixtyfour_))
    , fthirtytwo(std::move(fthirtytwo_))
    , fsixtyfour(std::move(fsixtyfour_))
    , s(std::move(s_))
    , d(std::move(d_))
    , o_b(std::move(o_b_))
    , o_eight(std::move(o_eight_))
    , o_sixteen(std::move(o_sixteen_))
    , o_thirtytwo(std::move(o_thirtytwo_))
    , o_sixtyfour(std::move(o_sixtyfour_))
    , o_fthirtytwo(std::move(o_fthirtytwo_))
    , o_fsixtyfour(std::move(o_fsixtyfour_))
    , o_s(std::move(o_s_))
    , o_d(std::move(o_d_))
    {}

    ParcelablePrimitives(const ParcelablePrimitives& cpy) {
       this->b = cpy.b;
       this->eight = cpy.eight;
       this->sixteen = cpy.sixteen;
       this->thirtytwo = cpy.thirtytwo;
       this->sixtyfour = cpy.sixtyfour;
       this->fthirtytwo = cpy.fthirtytwo;
       this->fsixtyfour = cpy.fsixtyfour;
       this->s = cpy.s;
       this->d = cpy.d;
       this->o_b = cpy.o_b;
       this->o_eight = cpy.o_eight;
       this->o_sixteen = cpy.o_sixteen;
       this->o_thirtytwo = cpy.o_thirtytwo;
       this->o_sixtyfour = cpy.o_sixtyfour;
       this->o_fthirtytwo = cpy.o_fthirtytwo;
       this->o_fsixtyfour = cpy.o_fsixtyfour;
       this->o_s = cpy.o_s;
       this->o_d = cpy.o_d;
    }

    ParcelablePrimitives() = default;


    ParcelablePrimitives& operator=(const ParcelablePrimitives& cpy) {
       this->b = cpy.b;
       this->eight = cpy.eight;
       this->sixteen = cpy.sixteen;
       this->thirtytwo = cpy.thirtytwo;
       this->sixtyfour = cpy.sixtyfour;
       this->fthirtytwo = cpy.fthirtytwo;
       this->fsixtyfour = cpy.fsixtyfour;
       this->s = cpy.s;
       this->d = cpy.d;
       this->o_b = cpy.o_b;
       this->o_eight = cpy.o_eight;
       this->o_sixteen = cpy.o_sixteen;
       this->o_thirtytwo = cpy.o_thirtytwo;
       this->o_sixtyfour = cpy.o_sixtyfour;
       this->o_fthirtytwo = cpy.o_fthirtytwo;
       this->o_fsixtyfour = cpy.o_fsixtyfour;
       this->o_s = cpy.o_s;
       this->o_d = cpy.o_d;
       return *this;
    }

    template <class Archive>
    void load(Archive& archive) {
        archive(b, eight, sixteen, thirtytwo, sixtyfour, fthirtytwo, fsixtyfour, s, d, o_b, o_eight, o_sixteen, o_thirtytwo, o_sixtyfour, o_fthirtytwo, o_fsixtyfour, o_s, o_d);
    }

    template <class Archive>
    void save(Archive& archive) const {
        archive(b, eight, sixteen, thirtytwo, sixtyfour, fthirtytwo, fsixtyfour, s, d, o_b, o_eight, o_sixteen, o_thirtytwo, o_sixtyfour, o_fthirtytwo, o_fsixtyfour, o_s, o_d);
    }
};

}  // namespace testsuite
#endif //DJINNI_GENERATED_PARCELABLE_PRIMITIVES_HPP
